/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE    0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
        conditial_layers {
                compatible = "zmk,keymap";

                adjust_layer {
                        if-layers  = <LOWER RAISE>;
                        then-layer = <ADJUST>;
                }
                
        }

        keymap {
                compatible = "zmk,keymap";

                base_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E   |  R  |  T  |    |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D   |  F  |  G  |    |  H  |  J   |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |  C   |  V  |  B  |    |  N  |  M   |  ,  |  .  |  /  | ALT  |
//                    | CTRL | LWR | SPC |    | ENT | RSE  | GUI |
                        bindings = <
   &kp ESC    &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y   &kp U  &kp I      &kp O    &kp P     &kp BSPC
   &kp TAB    &kp A  &kp S  &kp D  &kp F  &kp G    &kp H   &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
   &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LALT
                  &kp LCTRL &mo LOWER &kp SPACE    &kp RET &mo RAISE  &kp LGUI
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  !  |  @  |  #   |  $  |  %  |    |  ^  |  &  |  *  |  (  |  )  | DEL |
// | TAB  |     |     |      |     |  ~  |    |  -  |  =  |  \  |  [  |  ]  |  `  |
// | SHFT |     |     |      |     |     |    |  _  |  +  | "|" |  {  |  }  | ALT |
//                    | CTRL | LWR | SPC |    | ENT | RSE | GUI |
                        bindings = <
   &trans  &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT   &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DEL
   &trans  &trans   &trans  &trans   &trans   &trans      &kp MINUS  &kp EQUAL  &kp BSLH   &kp LBKT  &kp RBKT  &kp GRAVE
   &trans  &trans   &trans  &trans   &trans   &kp TILDE   &kp UNDER  &kp PLUS   &kp PIPE   &kp LBRC  &kp RBRC  &trans 
                            &trans   &trans   &trans      &trans     &trans     &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  1  |  2  |  3   |  4  |  5  |    |  6  |  7   |  8  |  9  |  0  | DEL |
// | TAB  |     |     |      |     | CPS |    | LFT | DWN  | UP  | RGT |     |     |
// | SHFT |     |     |      |     |     |    |     |      |     |     |     | ALT |
//                    | CTRL | LWR | SPC |    | ENT | RSE  | GUI |
                        bindings = <
   &trans  &kp N1  &kp N2  &kp N3  &kp N4       &kp N5   &kp N6   &kp N7    &kp N8  &kp N9     &kp N0  &kp DEL
   &trans  &trans  &trans  &trans  &kp CAPS     &trans   &kp LEFT &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
   &trans  &trans  &trans  &trans  &trans       &trans   &trans   &trans    &trans  &trans     &trans  &trans
                   &trans  &trans  &trans       &trans   &trans   &trans
                        >;
                };


                adjust_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |     |     |      |     | BT0 |    |     |      |     |      |     |     |
// | TAB  |     |     |      |     | BT1 |    |     | VOL+ | MUT | VOL- |     |     |
// | SHFT |     |     |      |     | BT2 |    |     |      |     |      |     |     |
//                    | CTRL | LWR | SPC |    | ENT | RSE  | GUI |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0     &trans  &trans        &trans      &trans        &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1     &trans  &kp C_VOL_UP  &kp C_MUTE  &kp C_VOL_DN  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2     &trans  &trans        &trans      &trans        &trans  &trans
                           &trans  &trans  &trans           &trans  &trans        &trans 
                        >;
                };
        };
};

